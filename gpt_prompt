Create a web application for task tracking using an Agile/Scrum approach, similar to Trello by Atlassian. The application will feature task cards and workflow columns to indicate the status of each task.

**Technology Stack:**
- **Backend:** Express.js
- **Frontend:** Vite
- **Database:** MySQL

**Requirements:**

1. **Virtual Environment:**
   - Implement a virtual environment akin to Python's venv for this project. Is this feasible with the chosen stack?

2. **Containerization:**
   - Deploy the web application using Kubernetes Helm for containerization.

3. **Development Environment:**
   - Utilize VS Code for development, with the terminal running on WSL (Ubuntu).

4. **Infrastructure Automation:**
   - Use automation tools like Ansible or Terraform to streamline infrastructure setup, ensuring reusability.

**Backend:**
- Design a modular and organized backend structure for easy management, scalability, and troubleshooting.

**Frontend:**
- Ensure clean visuals with rounded edges, drop shadows, and high contrast for accessibility.
- Include customization options for UI elements via a settings menu.
- Maintain a simple interface, revealing additional content through interactive panels.
- Store user data in customizable task cards.

**Authentication and User Management:**
- Implement user authentication with role-based access control.

**Roles and Permissions:**
- **System Administrator:** Full access to all features and settings.
- **Project Roles:**
  - **Project Owner:** Full project control, including deletion and renaming, plus all permissions of lower roles.
  - **Project Lead:** Access to all project features except deletion and renaming, plus all permissions of lower roles.
  - **Member:** Can manage their own cards and view all cards, but cannot alter project settings or others' cards.
  - **Guest:** View-only access to project cards.

**Role Assignment:**
- System Administrators can manage all roles.
- Project Owners can assign co-owners and manage lower roles.
- Project Leads can assign other leads and manage lower roles.

**Containerization:**
- Use Kubernetes Helm for the entire application infrastructure.
- Provide steps, commands, and files for setup.
- Ensure Helm templates are dynamic, with data supplied via `values.yaml` without breaking standard schemas.

**Initial Features:**
- Assign members to cards, with permissions for self-assignment or by authorized users.
- Account management features: password management, recovery, display name setup/change, email change.
- Email notifications using Gmail SMTP.
